#3) How would you modify your answers to Questions 1
#   and 2 if you were interested in the effect of tx on
#   survival time for the cause-specific event of finding
#   metastatic bladder cancer?
#   I would treat local recurrence (event=1) and other mestasis (event=3) as censored and fit essentially the same Cox PH model.
#4) For the model considered in Question 1, briefly
#   describe how to carry out a sensitivity analysis to determine
#   how badly the results from fitting this model
#   might be biased if the assumption of independent competing
#   risks is violated.
#   To see how biased this model might be, we would compare our Cox PH model to those for which the independence assumption has been
#   thoroughly violated. This could be done by considering all events to be the single event type of interest, or by changing the
#   survival times of event types 2 and 3 to the last possible time, essentially treating them as event-free.
#   We would then calculate a Cox PH model for one or both of these assumptions and compare them to the Cox PH model from question 1.
#   This does not give any evidence of dependence or independence, but it does offer a view of how biased our first model might be
#   under worst-case conditions.
#5)
data9_5tx1<-c("0 27 0 0 — — —
2 27 0 0 1 0 0
3 26 0 0 .9630 0 0
4 24 0 0 .8889 0 0
8 23 1 .0435 .8889 .0387 .0387
9 21 0 0 .8116 0 .0387
10 20 0 0 .7729 0 .0387
15 17 1 .0588 .7343 .0432 .0819
16 15 0 0 .6479 0 .0819
18 14 0 0 .6047 0 .0819
22 12 1 .0833 .6047 .0504 .1323
23 11 1 .0910 .5543 .0504 .1827
24 8 1 .1250 .5039 .0630 .2457
26 7 1 .1429 .4409 .0630 .3087
28 4 0 0 .3779 0 .3087
29 2 0 0 .2835 0 .3087
30 1 0 0 .2835 0 .3087")
ds9_5tx1<-data.frame(matrix(as.numeric(unlist(strsplit(data9_5tx1, split="\\s|\\n"))), ncol=7,byrow=TRUE))
colnames(ds9_5tx1)<-c("tf", "nf", "d1f", "h1" ,"S1", "I1", "CIC1")
ds9_5tx1
data9_5tx0<-c("0 26 0 0 — — —
1 26 1 .0400 1 .0400 .0400
2 24 1 .0417 .9615 .0400 .0800
3 23 2 .0870 .9215 .0801 .1601
5 21 0 0 .8413 0 .1601
6 20 0 0 .8013 0 .1601
7 18 0 0 .7212 0 .1601
10 16 0 0 .6811 0 .1601
12 15 1 .0667 .6385 .0426 .2027
14 13 0 0 .6835 0 .2027
16 12 1 .0833 .5534 .0461 .2488
17 10 1 .1000 .4612 .0461 .2949
18 9 0 0 .4150 0 .2949
21 8 0 0 .4150 0 .2949
23 7 0 0 .3632 0 .2949
25 6 1 .1667 .3632 .0605 .3554
29 4 0 0 .2421 0 .3554
30 2 1 0 .2421 0 .3554")
ds9_5tx0<-data.frame(matrix(as.numeric(unlist(strsplit(data9_5tx0, split="\\s|\\n"))), ncol=7,byrow=TRUE))
colnames(ds9_5tx0)<-c("tf", "nf", "d1f", "h1" ,"S1", "I1", "CIC1")
ds9_5tx0
#5A)  Verify the CIC1 calculation provided at failure time
#     tf = 8 for persons in the treatment group (tx = 1);
#     that is, use the original data to compute h1(tf), S(tf1),
#     I1(tf), and CIC1(tf), assuming that the calculations
#     made up to this failure time are correct.
#     h1(tf=8)  = (1/23) =  0.04347
#     S(tf1=8)  = (26/27)*(24/26) = 0.88889
#     I1(tf=8)  = (h1(tf=8))*(S1(tf=8))=(1/23)*(24/27)=0.03865
#     CIC(tf=8) = 0 + 0.03865 = 0.03865
#5B)  Verify the CIC1 calculation provided at failure time
#     tf = 25 for persons in the treatment group (tx = 0).
#     h1(tf=25)  = (1/6) =  0.1667
#     S(tf1=25)  = S(21)*P(tf>23|tf>=23)=(.4150)*(7/8) = 0.36312
#     I1(tf=25)  = (h1(tf=25))*(S1(tf=25))=(1/6)*(0.36312)=0.0605
#     CIC(tf=25) = CIC(tf=23) + I(tf=25) = .2949 + 0.0605
#5C)  Interpret the CIC1 values obtained for both tthe treatment and placebo groups at tf=30.
#     For the treatment group, there is an estimated probability of .3087 that any given individual will have experienced
#     a recurrence of bladder cancer by time tf=30, controlling for the competing risk of bladder or other metastasis.
#     For the placebo group, there is an estimated probability of .3554 that any given individual will have experienced
#     a recurrence of bladder cancer by time tf=30, controlling for local recurrence or other metastasis.
#5D)  How can you calculate the CPC1 values for both treatment and placebo groups at tf=30?
ds5d<-data9b
ds5d$Event1<-0
q
summary(q)
ds5d<-data9b
ds5d$Event1<-0
for(i in 1:length(ds5d[,1])){
ds5d$Event1[i]<-ifelse(ds5d$Event[i]==1, 1, 0)
}
q
ds5d
q<-survfit(Surv(ds5d$Time, ds5d$Event1)~strata(ds5d$TX), data=ds5d)
q
summary(q)
data9b
ds9_5tx0
ds9_5tx1
summary(q)
ds5d
ds9_5tx1
install.packages("cmprsk")
library(comprsk)
library(cmprsk)
data9
data9b
q<-cuminc(data9b$Time, data9b$Event)
q
summary(q)
q<-crr(data9b$Time, data9b$Event)
ds5d
q<-cuminc(ds5d$Time, ds5d$Event1)
summary(q)
q
q<-cuminc(ds5d$Time, ds5d$Event1, strata=ds5dTX)
q<-cuminc(ds5d$Time, ds5d$Event1, strata=ds5d$TX)
q
summary(q)
q
print(q)
print(q)
timepoints(q, times=c(1:30))
q<-cuminc(ds5d$Time, ds5d$Event1, group=ds5d$TX)
q
timepoints(q, times=c(1:30))
data9b
ds5d<-data9b
ds5d
ds5d$Event1<-0
ds5d
for(i in 1:length(ds5d[,1])){
ds5d$Event1[i]<-ifelse(ds5d$Event[i]==1, 1, 0)
}
ds5d
ds7a<-data9b
ds7a$CR<-0
ds7<-data9b
ds7$CR<-0
ds7<-data9b
ds7$CR<-0
for(i in 1:length(ds7)){
ds7$CR[i]<-ifelse(ds7$Event[i]==1, 1, 0)
}
ds7
for(i in 1:length(ds7$CR)){
ds7$CR[i]<-ifelse(ds7$Event[i]==1, 1, 0)
}
ds7
ds7$OM<-0
for(i in 1:length(ds7$CR)){
ds7$CR[i]<-ifelse(ds7$Event[i]==1, 1, 0)
ds7$CM[i]<-ifelse(ds7$Event[i]==2, 1, 0)
ds7$OM[i]<-ifelse(ds7$Event[i]==3, 1, 0)
}
ds7
data9b
ds7
hazard6a<-coxph(Surv(Time, Event1)~tx+num+size, data=ds7)
hazard6a<-coxph(Surv(Time, CR)~tx+num+size, data=ds7)
hazard6a<-coxph(Surv(Time, CR)~TX+NUM+Size, data=ds7)
hazard6a
hazard6b<-coxph(Surv(Time, CM)~TX+NUM+Size, data=ds7)
hazard6c<-coxph(Surv(Time, OM)~TX+NUM+Size, data=ds7)
hazard6a
hazard6b
hazard6c
ds6<-data9b
ds6$CR<-0
ds6$CM<-0
ds6$OM<-0
for(i in 1:length(ds6$CR)){
ds6$CR[i]<-ifelse(ds6$Event[i]==1, 1, 0)
ds6$CM[i]<-ifelse(ds6$Event[i]==2, 1, 0)
ds6$OM[i]<-ifelse(ds6$Event[i]==3, 1, 0)
}
hazard6a<-coxph(Surv(Time, CR)~TX+NUM+Size, data=ds6)
hazard6b<-coxph(Surv(Time, CM)~TX+NUM+Size, data=ds6)
hazard6c<-coxph(Surv(Time, OM)~TX+NUM+Size, data=ds6)
hazard6a
hazard6b
hazard6c
ds6
ds7<-rbind(data9b,data9b, data9b )
ds7
?rep()
rep(1:4,2)
?sort()
?order()
attach(mtcars)
newdata<-mtcars[order(mpg),]
newdata
ds7<-ds7[order(ds7$ID)]
ds7
ds7<-ds7[order(ds7$ID),]
ds7
ds6$CR<-rep(c(1,0,0), 3)
?rep()
ds7$CR<-rep(c(1,0,0), 3)
ds7$CR<-rep(c(1,0,0), length(ds7)/3)
length(ds7)/3
ds7$CR<-rep(c(1,0,0), length(ds7[,1])/3)
ds7$CR
ds7
ds7$CR<-rep(c(1,0,0), length(ds7[,1])/3)
ds7$CM<-rep(c(0,1,0), length(ds7[,1])/3)
ds7$OM<-rep(c(0,0,1), length(ds7[,1])/3)
ds7$OM
ds7
exp(-0.6258+0.6132)
exp(-0.6258+0.2463)
exp(-0.3796)
exp(-0.0127)
data9b
ds7<-rbind(data9b, data9b, data9b)
ds7<-ds7[sort(ds7$ID),]
ds7
ds7<-data9b
data9b
300/(1-.2)
log(0)
log(1)
log(2)/(1.5)
log(2)/2.2
0.462/0.3151
0.462/0.3151
sqrt(4)
2^2
#     NEV=((z[1-a/2] + z[1-b/2])(RDelta+1)/(sqrt(R)*(Delta-1)))^2 = ((1.96 + 0.84)((2)(1.467)+1)/(sqrt(2)*((1.467)-1)))^2
((1.96 + 0.84)((2)(1.467)+1)/(sqrt(2)*((1.467)-1)))^2
(1.96 + 0.84)((2)(1.467)+1)
((1.96 + 0.84)((2)*(1.467)+1)/(sqrt(2)*((1.467)-1)))^2
((2)*(1.467)+1)
((1.96 + 0.84)*((2)*(1.467)+1)/(sqrt(2)*((1.467)-1)))^2
((1.96 + 0.84)*(((2)*(1.467))+1)/(sqrt(2)*((1.467)-1)))^2
(1 - (1/(0.462*2))*(exp(-0.462*3)-exp(-0.462(2+3))))
(1 - (1/(0.462*2))*(exp(-0.462*3)-exp(-0.462*(2+3))))
(1 - (1/(0.3151*2))*(exp(-0.3151*3)-exp(-0.3151*(2+3))))
((1.96 + 0.84)*(((2)*(1.467))+1)/(sqrt(2)*((1.467)-1)))^2
(278.1769)/(((2/(2+1))*(0.7117)) + ((1/(2+1))*(0.8368)))
(130)/(((2/(2+1))*(0.7117)) + ((1/(2+1))*(0.8368)))
(279)/(((2/(2+1))*(0.7117)) + ((1/(2+1))*(0.8368)))
(2/2+1)*(173)
(2/(2+1))*(173)
(2/(2+1))*(371)
(247.3)/2
(371)/(1-0.25)
(2/(2+1))*(495)
(330)/2
495/(1 - 0.05 - 0.1)
(2/(2+1))*(583)
(389)/2
194+389
((1.96 + 1.282)*(((2)*(2))+1)/(sqrt(2)*((2)-1)))^2
(132)/(((2/(2+1))*(1-exp(-2*0.05*5))) + ((1/(2+1))*(1-exp(-2*5))))
(132)/(((2/(2+1))*(1-exp(-2*0.05*3))) + ((1/(2+1))*(1-exp(-2*3))))
(132)/(((2/(2+1))*(1-exp(-2*0.05*3))) + ((1/(2+1))*(1-exp(-.05*3))))
(2/(2+1))*(602)
(401)/2
(1 - (1/(0.1*2))*(exp(-0.1*2)-exp(-0.1*(2+2))))
(1 - (1/(0.05*2))*(exp(-0.05*2)-exp(-0.1*(2+2))))
(1 - (1/(0.05*2))*(exp(-0.05*2)-exp(-0.05*(2+2))))
((1.96 + 1.282)*(((2)*(2))+1)/(sqrt(2)*((2)-1)))^2
(132)/(((2/(2+1))*(0.1389)) + ((1/(2+1))*(0.2579)))
(2/(2+1))*(739)
(492)/2
(739)/(1-0.25)
739/(1 - 0.05 - 0.1)
(495/(1 - 0.05 - 0.1))^2
495/((1 - 0.05 - 0.1)^2)
495/(((1 - 0.05) - 0.1)^2)
739/((1 - 0.05 - 0.1)^2)
(2/(2+1))*(986)
(658)/2
739/((1 - 0.05 - 0.1)^2)
986/((1 - 0.05 - 0.1)^2)
(2/(2+1))*(1365)
910/2
(2/(2+1))*(583)
495/(((1 - 0.05) - 0.1)^2)
(371)/(1-0.25)
(279)/(((2/(2+1))*(0.7117)) + ((1/(2+1))*(0.8368)))
install.packages("mirt.R")
################################
## Setting up
################################
rm(list = ls(all.names = TRUE))
setwd("/Users/Andrew/Documents/Github/IRT-and-Survival")
library(ltm)
library(mirt)
library(TAM)
library(eRm)
library(IRTShiny)
library(psych)
install.packages("pathview.R")
install.packages("pathview")
install.packages("lavaan")
install.packages("lavaan")
library(lavaan)
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
'
covm1
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
100 100 100
'
covm1
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
'
covm1
covm1<-'
100 1.0 0.7 0.3
100    1.0 .48
100        1.0
'
covm1
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
'
library(SEMtools)
library(semTools)
install.packages("semTools")
library(semTools)
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
'
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
'
data<-kd(covm1, n=100, type="exact")
ncol(covm1)
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
'
covm1<-'
1.0 0.7 0.3
0.7 1.0 .48
0.3 0.48 1.0
'
covm1
r1<-c(1.0, 0.7, 0.3)
r2<-c(0.7, 1.0, 0.48)
r3<-c(0.3, 0.48, 1.0)
covm2<-rbind(r1, r2, r3)
covm2
data<-kd(covm2, n=100, type="exact")
covm2
covm2<-as.data.frame(rbind(r1, r2, r3))
ds1<-kd(covm2, n=100, type="exact")
covm1<-'
1.0 0.7 0.3
0.7 1.0 .48
0.3 0.48 1.0
'
covm2<-getCov(covm1)
covm2<-getCov(covm1, names=c("B", "C", "D"))
?getCov()
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
'
covm2<-getCov(covm1, diagonal=TRUE, lower=FALSE, names=c("B", "C", "D"))
covm2
model12<- '
C~B+F
D~F
B~~F
'
fit1<-sem(model12, covm2, sample.nobs=100)
model12<- '
B~~F
C~B+F
D~F
'
fit1<-sem(model12, covm2, sample.nobs=100)
fit1<-sem(data=model12, sample.cov=covm2, sample.nobs=100)
fit1<-sem(data=model12, sample.cov=covm2, sample.nobs=100)
model12<-'
B~~A
C~B+A
D~A
'
covm2<-getCov(covm1, diagonal=TRUE, lower=FALSE, names=c("B", "C", "D"))
covm2
fit1<-sem(model12, sample.cov=covm2, sample.nobs=100)
covm2<-'
NA NA  NA  NA
1.0 0.7 0.3
1.0 .48
1.0
'
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
'
covm1b<-getCov(covm1, diagonal=TRUE, lower=FALSE, names=c("B", "C", "D"))
model12<-'
B~~A
C~B+A
D~A
'
fit1<-sem(model12, sample.cov=covm1b, sample.nobs=100)
covm2<-'
NA NA  NA  NA
1.0 0.7 0.3
1.0 .48
1.0
'
covm2b<-getCov(covm2, diagonal=TRUE, lower=FALSE, names=c("A", "B", "C", "D"))
covm2b
model12b<-'
B~~A
C~B+A
D~A
'
fit2<-sem(model12b, sample.cov=covm2b, sample.nobs=100)
?fit()
?sem()
fit2<-sem(model12b, sample.cov=covm2b, sample.nobs=100, fixed.x=FALSE)
covm1b<-getCov(covm1, diagonal=TRUE, lower=FALSE, names=c("B", "C", "D"))
model12<-'
A=~B
C~B+A
D~A
'
fit1<-sem(model12, sample.cov=covm1b, sample.nobs=100)
summary(fit1)
model12<-'
A=~D+C
B~C
'
fit1<-sem(model12, sample.cov=covm1b, sample.nobs=100)
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
'
covm1b<-getCov(covm1, diagonal=TRUE, lower=FALSE, names=c("B", "C", "D"))
model12<-'
A=~D+C
B~C
'
fit1<-sem(model12, sample.cov=covm1b, sample.nobs=100)
summary(fit1)
covm1<-'
1.0 0.7 0.3
1.0 .48
1.0
'
covm1b<-getCov(covm1, diagonal=TRUE, lower=FALSE, names=c("B", "C", "D"))
model12<-'
A=~D+C
B~C
B~~A
'
fit1<-sem(model12, sample.cov=covm1b, sample.nobs=100)
summary(fit1)
model12<-'
A=~D+C
B~C
C~~D
'
fit1<-sem(model12, sample.cov=covm1b, sample.nobs=100)
summary(fit1)
model12<-'
A=~D+C
B~C
'
fit1<-cfa(model12, sample.cov=covm1b, sample.nobs=100)
summary(fit1)
model12<-'
A=~D+C
C~B
'
fit1<-cfa(model12, sample.cov=covm1b, sample.nobs=100)
summary(fit1)
model12<-'
A=~D+C
C~B
B~~A
'
fit1<-cfa(model12, sample.cov=covm1b, sample.nobs=100)
summary(fit1)
model12<-'
A=~D+C
C~B
'
fit1<-cfa(model12, sample.cov=covm1b, sample.nobs=100)
summary(fit1)
model12<-'
A=~D+C
B~C
'
fit1<-cfa(model12, sample.cov=covm1b, sample.nobs=100)
summary(fit1)
fit1<-sem(model12, sample.cov=covm1b, sample.nobs=100)
summary(fit1)
